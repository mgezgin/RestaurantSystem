version: '3.8'
services:
  restaurantsystem-api:
    build:
      context: .
      dockerfile: RestaurantSystem.Api/Dockerfile
    container_name: restaurant-api-dev
    ports:
      - "5221:8080"
      - "7000:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=restaurantdb;Username=postgres;Password=postgres123
      - ConnectionStrings__Redis=redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - restaurant-network-dev

  postgres:
    image: postgres:16
    container_name: restaurant-postgres-dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
      - POSTGRES_DB=restaurantdb
    volumes:
      - postgres-data-dev:/var/lib/postgresql/data
    networks:
      - restaurant-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: restaurant-redis-dev
    ports:
      - "6379:6379"
    networks:
      - restaurant-network-dev
    volumes:
      - redis-data-dev:/data
    command: redis-server --appendonly yes

networks:
  restaurant-network-dev:
    driver: bridge
    
volumes:
  postgres-data-dev:
  redis-data-dev: